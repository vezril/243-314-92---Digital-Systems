Microsoft (R) Macro Assembler Version 6.11d		    11/13/08 15:09:08
4.asm							     Page 1 - 1


				; PROGRAM: 4.ASM
				;
				; AUTHOR: Calvin O. Ference
				;
				; DESCRIPTION:  Fahrenheit to Celcius Conversion Program with I/O
				; 
				; 

				        ASSUME	cs:code, ds:data, ss:stak
					EXTRN	getword:FAR, newline:FAR, outstr:FAR, outword:FAR, getbyte:FAR

 0000				code    SEGMENT
 0000				main    PROC   

 0000  B8 ---- R		init:	mov	ax,data
 0003  8E D8				mov	ds,ax
 0005  B8 0000				mov	ax,0
 0008  BA 0000				mov	dx,0
 000B  BB 0000				mov	bx,0
 000E  B9 0000				mov	cx,0
 0011  8D 36 0000 R			lea	si,vals

 0015  8D 3E 0032 R		pta:	lea	di,msg1
 0019  9A ---- 0000 E			call	outstr
 001E  9A ---- 0000 E			call	getbyte
 0023  9A ---- 0000 E			call	newline

 0028  3C 19			hajime:	cmp	al,25
 002A  76 03 E9 00CD			ja	oor		;users are losers, sends back to the beginning
 002F  3C 00				cmp	al,0
 0031  75 03 E9 00C6			je	oor		;to prvent an FF loop at the input values
 0036  8A C8				mov	cl,al		;to use as a cnt
 0038  8A E8				mov	ch,al		;to use to divide

 003A  8D 3E 008B R		ipts:	lea	di,msg3
 003E  9A ---- 0000 E			call	outstr
 0043  9A ---- 0000 E			call	getword
 0048  9A ---- 0000 E			call	newline
 004D  3B 06 011B R			cmp	ax,maxi
 0051  76 03 E9 00B7			ja	maxs
 0056  3B 06 011D R		ptb:	cmp	ax,mini
 005A  73 03 E9 00B4			jb	mins
 005F  89 04			ptc:	mov	[si],ax
 0061  83 C6 02				add	si,2		;next memory location
 0064  FE C9				dec	cl		;counting down untill 0 then jumps to addition
 0066  80 F9 00				cmp	cl,0
 0069  77 CF				ja	ipts
 006B  8D 36 0000 R			lea	si,vals		;setting up for the next part
 006F  B8 0000				mov	ax,0		;making sure ax is empty for next part
 0072  B1 00				mov	cl,0		;making sure cl is ready for next part

 0074  03 04			adding:	add	ax,[si]
 0076  83 D2 00				adc	dx,0
 0079  83 C6 02				add	si,2
 007C  FE C1				inc	cl
 007E  38 E9				cmp	cl,ch
 0080  72 F2				jb	adding
 0082  89 16 0113 R			mov	rez1,dx
 0086  A3 0115 R			mov	rez1+2,ax
 0089  8A DD				mov	bl,ch
 008B  F7 F3				div	bx
 008D  89 16 0117 R			mov	rez2,dx
 0091  A3 0119 R			mov	rez2+2,ax
 0094  8D 3E 00A2 R			lea	di,msg4		;this next section pretty much prints out everything
 0098  9A ---- 0000 E			call	outstr
 009D  A1 0113 R			mov	ax,rez1
 00A0  9A ---- 0000 E			call	outword
 00A5  A1 0115 R			mov	ax,rez1+2
 00A8  9A ---- 0000 E			call	outword
 00AD  9A ---- 0000 E			call	newline
 00B2  8D 3E 00BF R			lea	di,msg5
 00B6  9A ---- 0000 E			call	outstr
 00BB  A1 0117 R			mov	ax,rez2
 00BE  9A ---- 0000 E			call	outword
 00C3  A1 0119 R			mov	ax,rez2+2
 00C6  9A ---- 0000 E			call 	outword
 00CB  9A ---- 0000 E			call	newline
 00D0  8D 3E 00E0 R			lea	di,msg6
 00D4  9A ---- 0000 E			call	outstr
 00D9  A1 011B R			mov	ax,maxi
 00DC  9A ---- 0000 E			call	outword
 00E1  9A ---- 0000 E			call	newline
 00E6  8D 3E 00F9 R			lea	di,msg7
 00EA  9A ---- 0000 E			call	outstr
 00EF  A1 011D R			mov	ax,mini
 00F2  9A ---- 0000 E			call	outword
						
 00F7  B8 4C00			shi:	mov	ax,4c00h
 00FA  CD 21				int	21h

 00FC  8D 3E 0067 R		oor:	lea	di,msg2
 0100  9A ---- 0000 E			call	outstr
 0105  9A ---- 0000 E			call	newline
 010A  E9 FF08				jmp	pta

 010D  A3 011B R		maxs:	mov	maxi,ax
 0110  E9 FF43				jmp	ptb
 0113  A3 011D R		mins:	mov	mini,ax
 0116  E9 FF46				jmp	ptc


					
 0119				main	ENDP
 0119				code	ENDS

 0000				data	SEGMENT
 0000  0019 [			vals	dw	25 dup (0)
        0000
       ]
 0032 45 6E 74 65 72 20		msg1	db	"Enter the size of data in words in HEX (Max 19h) >> ",04h
       74 68 65 20 73 69
       7A 65 20 6F 66 20
       64 61 74 61 20 69
       6E 20 77 6F 72 64
       73 20 69 6E 20 48
       45 58 20 28 4D 61
       78 20 31 39 68 29
       20 3E 3E 20 04
 0067 4F 75 74 20 6F 66		msg2	db	"Out of the range, into the vortex! ",04h
       20 74 68 65 20 72
       61 6E 67 65 2C 20
       69 6E 74 6F 20 74
       68 65 20 76 6F 72
       74 65 78 21 20 04
 008B 50 6C 65 61 73 65		msg3	db	"Please enter Value >> ",04h
       20 65 6E 74 65 72
       20 56 61 6C 75 65
       20 3E 3E 20 04
 00A2 54 68 65 20 73 75		msg4	db	"The sum of the Values is >> ",04h
       6D 20 6F 66 20 74
       68 65 20 56 61 6C
       75 65 73 20 69 73
       20 3E 3E 20 04
 00BF 54 68 65 20 41 76		msg5	db	"The Average of the values is >> ",04h
       65 72 61 67 65 20
       6F 66 20 74 68 65
       20 76 61 6C 75 65
       73 20 69 73 20 3E
       3E 20 04
 00E0 54 68 65 20 42 69		msg6	db	"The Biggest Value is >> ",04h
       67 67 65 73 74 20
       56 61 6C 75 65 20
       69 73 20 3E 3E 20
       04
 00F9 54 68 65 20 53 6D		msg7	db	"The Smallest Value is >> ",04h
       61 6C 6C 65 73 74
       20 56 61 6C 75 65
       20 69 73 20 3E 3E
       20 04
 0113 0000 0000			rez1	dw	0,0
 0117 0000 0000			rez2	dw	0,0
 011B 0000			maxi	dw	0
 011D FFFF			mini	dw	0ffffh
 011F				data	ENDS

 0000				stak	SEGMENT	STACK
 0000  0100 [				dw	256 dup (0)
        0000
       ]
 0200				stak	ends

						END
Microsoft (R) Macro Assembler Version 6.11d		    11/13/08 15:09:08
4.asm							     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

code . . . . . . . . . . . . . .	16 Bit	 0119	  Para	  Private 
data . . . . . . . . . . . . . .	16 Bit	 011F	  Para	  Private 
stak . . . . . . . . . . . . . .	16 Bit	 0200	  Para	  Stack	  


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

main . . . . . . . . . . . . . .	P Near	 0000	  code	Length= 0119 Public
  init . . . . . . . . . . . . .	L Near	 0000	  code	
  pta  . . . . . . . . . . . . .	L Near	 0015	  code	
  hajime . . . . . . . . . . . .	L Near	 0028	  code	
  ipts . . . . . . . . . . . . .	L Near	 003A	  code	
  ptb  . . . . . . . . . . . . .	L Near	 0056	  code	
  ptc  . . . . . . . . . . . . .	L Near	 005F	  code	
  adding . . . . . . . . . . . .	L Near	 0074	  code	
  shi  . . . . . . . . . . . . .	L Near	 00F7	  code	
  oor  . . . . . . . . . . . . .	L Near	 00FC	  code	
  maxs . . . . . . . . . . . . .	L Near	 010D	  code	
  mins . . . . . . . . . . . . .	L Near	 0113	  code	


Symbols:

                N a m e                 Type     Value    Attr

getbyte  . . . . . . . . . . . .	L Far	 0000	  External
getword  . . . . . . . . . . . .	L Far	 0000	  External
maxi . . . . . . . . . . . . . .	Word	 011B	  data	
mini . . . . . . . . . . . . . .	Word	 011D	  data	
msg1 . . . . . . . . . . . . . .	Byte	 0032	  data	
msg2 . . . . . . . . . . . . . .	Byte	 0067	  data	
msg3 . . . . . . . . . . . . . .	Byte	 008B	  data	
msg4 . . . . . . . . . . . . . .	Byte	 00A2	  data	
msg5 . . . . . . . . . . . . . .	Byte	 00BF	  data	
msg6 . . . . . . . . . . . . . .	Byte	 00E0	  data	
msg7 . . . . . . . . . . . . . .	Byte	 00F9	  data	
newline  . . . . . . . . . . . .	L Far	 0000	  External
outstr . . . . . . . . . . . . .	L Far	 0000	  External
outword  . . . . . . . . . . . .	L Far	 0000	  External
rez1 . . . . . . . . . . . . . .	Word	 0113	  data	
rez2 . . . . . . . . . . . . . .	Word	 0117	  data	
vals . . . . . . . . . . . . . .	Word	 0000	  data	

	   0 Warnings
	   0 Errors
