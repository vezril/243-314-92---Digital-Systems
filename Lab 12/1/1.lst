Microsoft (R) Macro Assembler Version 6.11d		    11/26/08 16:45:02
1.asm							     Page 1 - 1


				; PROGRAM: 1.ASM
				;
				; AUTHOR: Calvin O. Ference
				;
				; DESCRIPTION:  Bit CNT using EXTRN Sbr
				; 
				; Version:	1.0

				        ASSUME	cs:code, ds:data, ss:stak
					EXTRN	outstr:FAR, getbyte:FAR, getword:FAR, outbyte:FAR, outword:FAR, newline:FAR
					EXTRN	getc:FAR, bitcnt:FAR

 0000				code    SEGMENT
 0000				main    PROC   
 0000  B8 ---- R		init:	mov	ax,data
 0003  8E D8				mov	ds,ax
 0005  B8 0000				mov	ax,0
 0008  B9 0000				mov	cx,0

 000B  E8 002C			start:	call	inputs
 000E  9A ---- 0000 E			call	newline
 0013  E8 0008				call	eval
 0016  E8 004E				call	outputs

 0019  B8 4C00			shi:	mov	ax,4c00h
 001C  CD 21				int	21h
						
 001E				main	ENDP
				;-------------------
 001E				eval	PROC
 001E  8D 36 0000 R		init:	lea	si,vals
 0022  B1 10				mov	cl,16

 0024  8B 04			start:	mov	ax,[si]
 0026  9A ---- 0000 E			call	bitcnt
 002B  89 04				mov	[si],ax
 002D  83 C6 02				add	si,2
 0030  FE C9				dec	cl
 0032  80 F9 00				cmp	cl,0
 0035  74 02				je	done
 0037  EB EB				jmp	start

 0039  C3			done:	ret
 003A				eval	ENDP
				;--------------------
 003A				inputs	PROC
 003A  B1 10			init:	mov	cl,16
 003C  8D 36 0000 R			lea	si,vals
 0040  8D 3E 0020 R			lea	di,imsg1
 0044  9A ---- 0000 E			call	outstr
 0049  9A ---- 0000 E			call	newline

 004E  9A ---- 0000 E		start:	call	getword
 0053  89 04				mov	[si],ax
 0055  9A ---- 0000 E			call	newline
 005A  83 C6 02				add	si,2	;next memory location
 005D  FE C9				dec	cl
 005F  80 F9 00				cmp	cl,0	;checks if counter is done
 0062  74 02				je	done
 0064  EB E8				jmp	start

 0066  C3			done:	ret
 0067				inputs	ENDP
				;----------------------
 0067				outputs	PROC
 0067  B1 10			init:	mov	cl,16
 0069  8D 36 0000 R			lea	si,vals
 006D  8D 3E 0036 R			lea	di,imsg2
 0071  9A ---- 0000 E			call	outstr
 0076  9A ---- 0000 E			call	newline

 007B  8B 04			start:	mov	ax,[si]
 007D  9A ---- 0000 E			call	outword
 0082  9A ---- 0000 E			call	newline
 0087  83 C6 02				add	si,2
 008A  FE C9				dec	cl
 008C  80 F9 00				cmp	cl,0
 008F  74 02				je	done
 0091  EB E8				jmp	start

 0093  C3			done:	ret
 0094				outputs	ENDP

 0094				code	ENDS

					
 0000				data	SEGMENT
 0000  0010 [			vals	dw	16 dup (0)
        0000
       ]
 0020 50 6C 65 61 73 65		imsg1	db	"Please Enter 16 Words",04
       20 45 6E 74 65 72
       20 31 36 20 57 6F
       72 64 73 04
 0036 48 65 72 65 20 61		imsg2	db	"Here are the Results",04
       72 65 20 74 68 65
       20 52 65 73 75 6C
       74 73 04
 004B				data	ENDS


 0000				stak	SEGMENT	STACK
 0000  0400 [				dw	1024 dup (0)
        0000
       ]
 0800				stak	ENDS

						END
Microsoft (R) Macro Assembler Version 6.11d		    11/26/08 16:45:02
1.asm							     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

code . . . . . . . . . . . . . .	16 Bit	 0094	  Para	  Private 
data . . . . . . . . . . . . . .	16 Bit	 004B	  Para	  Private 
stak . . . . . . . . . . . . . .	16 Bit	 0800	  Para	  Stack	  


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

eval . . . . . . . . . . . . . .	P Near	 001E	  code	Length= 001C Public
  init . . . . . . . . . . . . .	L Near	 001E	  code	
  start  . . . . . . . . . . . .	L Near	 0024	  code	
  done . . . . . . . . . . . . .	L Near	 0039	  code	
inputs . . . . . . . . . . . . .	P Near	 003A	  code	Length= 002D Public
  init . . . . . . . . . . . . .	L Near	 003A	  code	
  start  . . . . . . . . . . . .	L Near	 004E	  code	
  done . . . . . . . . . . . . .	L Near	 0066	  code	
main . . . . . . . . . . . . . .	P Near	 0000	  code	Length= 001E Public
  init . . . . . . . . . . . . .	L Near	 0000	  code	
  start  . . . . . . . . . . . .	L Near	 000B	  code	
  shi  . . . . . . . . . . . . .	L Near	 0019	  code	
outputs  . . . . . . . . . . . .	P Near	 0067	  code	Length= 002D Public
  init . . . . . . . . . . . . .	L Near	 0067	  code	
  start  . . . . . . . . . . . .	L Near	 007B	  code	
  done . . . . . . . . . . . . .	L Near	 0093	  code	


Symbols:

                N a m e                 Type     Value    Attr

bitcnt . . . . . . . . . . . . .	L Far	 0000	  External
getbyte  . . . . . . . . . . . .	L Far	 0000	  External
getc . . . . . . . . . . . . . .	L Far	 0000	  External
getword  . . . . . . . . . . . .	L Far	 0000	  External
imsg1  . . . . . . . . . . . . .	Byte	 0020	  data	
imsg2  . . . . . . . . . . . . .	Byte	 0036	  data	
newline  . . . . . . . . . . . .	L Far	 0000	  External
outbyte  . . . . . . . . . . . .	L Far	 0000	  External
outstr . . . . . . . . . . . . .	L Far	 0000	  External
outword  . . . . . . . . . . . .	L Far	 0000	  External
vals . . . . . . . . . . . . . .	Word	 0000	  data	

	   0 Warnings
	   0 Errors
